# .github/workflows/release-builder.yml

name: Build and Release Windows Executable

# 触发条件
on:
  # 1. 当一个以 'v' 开头的 tag 被推送到仓库时 (例如 v1.0, v1.2.3)
  push:
    tags:
      - 'v*.*.*'
  # 2. 允许在 GitHub Actions 页面手动触发此工作流
  workflow_dispatch:

# 定义环境变量，方便修改
env:
  # 你的应用程序名称，会用作生成的可执行文件的名字
  APP_NAME: Manifest2Lua
  # 你希望用来构建的 Python 版本
  PYTHON_VERSION: "3.9"

jobs:
  build-release-windows:
    name: Build for Windows (x86_64)
    # 指定构建环境为 windows-2019 以保证 Python 3.9 兼容性
    runs-on: windows-2019

    steps:
      # 第一步：检出你的代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：设置 Python 环境
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: 'x64'

      # 第三步：安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # 第四步：使用 PyInstaller 构建
      - name: Build with PyInstaller
        run: pyinstaller --onefile --name ${{ env.APP_NAME }} main.py

      # 第五步：准备用于打包的文件
      - name: Prepare package
        shell: bash
        run: |
          mkdir -p release
          mv dist/${{ env.APP_NAME }}.exe release/

      # 第六步：打包成 zip 压缩文件
      - name: Package the executable
        shell: bash
        run: |
          cd release
          7z a ../${{ env.APP_NAME }}-windows-amd64.zip ./*
          cd ..

      # 第七步：上传构建产物到 Release
      - name: Upload assets to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.APP_NAME }}-windows-amd64.zip
          tag: ${{ github.ref_name }}
          overwrite: true
